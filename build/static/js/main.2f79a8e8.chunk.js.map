{"version":3,"sources":["AppMain/Home/TopMenu/index.tsx","AppMain/components/Table/index.tsx","AppMain/utils/defaultFunctions.ts","AppMain/utils/Dictionaries.ts","AppMain/utils/csvMaker.ts","AppMain/Home/PageHolder/assets/download.svg","AppMain/components/Diagramm/index.tsx","AppMain/components/Select/index.tsx","AppMain/components/InputM/index.tsx","AppMain/components/Menu/index.tsx","AppMain/Home/PageHolder/pages/AgeStatistic.tsx","AppMain/Home/PageHolder/pages/DiagnoseStatistic.tsx","AppMain/Home/PageHolder/pages/SexStatistic.tsx","AppMain/Home/PageHolder/pages/RegionStatistic.tsx","AppMain/Home/PageHolder/index.tsx","AppMain/Home/index.tsx","AppMain/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TopMenu","setCurrentPage","this","props","react_default","a","createElement","className","onClick","React","Component","Table","counter","data","Object","keys","forEach","key","console","log","item","headers","map","i","values","_values","toArray","first","rest","slice","field","dateTransformer","date","split","reverse","join","departments","text","value","processRow","row","finalVal","j","length","innerValue","toString","Date","toLocaleString","result","replace","search","formatDataToCsvString","csvFile","csvStringMaker","blob","Blob","type","URL","createObjectURL","_extends","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","fill","download_SvgDownload","_ref","svgRef","enableBackground","height","id","viewBox","width","xmlSpace","ref","ForwardRef","forwardRef","__webpack_require__","p","getRandomColor","Diagramm","dataKey","es6","margin","top","right","left","bottom","strokeDasharray","Select","_this$props","items","defaultString","title","onChange","defaultValue","disabled","InputM","state","checked","checkValid","str","arr","Number","parseInt","getFullYear","setFlag","_this","setState","handleBlur","e","onBlur","checkDate","react_input_mask_default","mask","Menu","dateStartChange","dateEndChange","sendReq","depChange","components_InputM","components_Select","f","AgeStatistic","dateStart","dateEnd","dep","normalizeAgeData","department","under18","age19","age22_24","age25_29","age30_34","age35_39","age40_44","age45_49","age50_54","age55_59","age60_64","age75","_this$state","axios","method","url","then","response","catch","error","alert","start","end","_this$state2","components_Menu","href","download","components_Table_Table","components_Diagramm_Diagramm","DiagnoseStatistic","now","SexStatistic","RegionStatistic","PageHolder","getPages","component","pages_AgeStatistic","pages_DiagnoseStatistic","pages_RegionStatistic","pages_SexStatistic","renderPage","currentPageNumber","setData","dateS","dateE","currentPage","defaultProps","Home","num","Home_TopMenu","Home_PageHolder","Main","AppMain_Home","App","AppMain","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2f79a8e8.chunk.js","sourcesContent":["import React from 'react';\nimport './TopMenu.scss';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ntype TProps = {\n    setCurrentPage(a:number):void\n}\n\nclass TopMenu extends React.Component<TProps,{}> {\n\n\n\n    render(){\n        const { setCurrentPage } = this.props;\n        return(\n            <div className=\"WrapperTop\">\n                <div className=\"ButtonLink\" onClick={() => setCurrentPage(0)}>Статистика по возрастам</div>\n                <div className=\"ButtonLink\" onClick={() => setCurrentPage(2)}>Статистика по регионам</div>\n                <div className=\"ButtonLink\" onClick={() => setCurrentPage(3)}>Статистика по полу</div>\n                <div className=\"ButtonLink\" onClick={() => setCurrentPage(1)}>Статистика по диагнозам</div>\n            </div>\n        );\n    }\n\n}\n\n\nexport default TopMenu;","import React from 'react';\nimport './Table.scss'\n\ntype TProps = {\n    data: any[],\n    headers?: string[],\n}\n\ntype TCounter = {\n    [key:string]:number\n}\n\nexport const Table = (props: TProps) => {\n\n    let counter:TCounter = {};\n    if(props.data[0]){\n\n        Object.keys(props.data[0]).forEach((key) => counter[key] = 0);\n        console.log(counter);\n        props.data.forEach((item) => {\n            Object.keys(item).forEach((key) => {\n                if(key !== 'department') counter[key] += +item[key]\n            })\n        });\n        console.log(counter);\n    }\n    return (\n        <table>\n            <tbody>\n            <tr className=\"Header\">\n                {\n                    props.data[0] &&\n                    (props.headers || Object.keys(props.data[0])).map((item, i) => {\n                        return (\n                            <th className=\"Cell\" key={i}>{item}</th>\n                        );\n                    })\n                }\n            </tr>\n            {\n                props.data.map((item, i) => {\n                    const values = Object.values(item),\n                        [first, ...rest] = values;\n                    return (\n                        <tr className=\"Row\" key={i}>\n                            <td className=\"LeftLabel\" key={i}> {first}</td>\n                            {rest.map((field, key) => <td className=\"Cell\" key={key}> {field}</td>)}\n                        </tr>\n                    );\n                })\n            }\n            <tr className=\"Row\">\n                {\n                    Object.keys(counter).map((item, i) => {\n                        if(item === 'department') return <td className=\"LeftLabel\"> Всего : </td>;\n                        else {\n                            return <td className=\"LeftLabel\"> {counter[item]}</td>\n                        }\n                    })\n                }\n            </tr>\n            </tbody>\n        </table>\n    );\n};\n\n","export const addDays = (date:any , numberOfDaysToAdd:number):Date => {\n    return date.setDate(date.getDate() + numberOfDaysToAdd);\n};\n\nexport const dateTransformer = (date: string): string => {\n    return date.split('-').reverse().join('-')\n};","export const departments = [\n    {\n        text: '1',\n        value:'1'\n    },\n    {\n        text: '2',\n        value:'2'\n    },\n    {\n        text: '3',\n        value:'3'\n    },\n    {\n        text: '4',\n        value:'4'\n    },\n    {\n        text: '5',\n        value: '5'\n    },\n    {\n        text: '6',\n        value: '6'\n    },\n    {\n        text: '7',\n        value: '7'\n    },\n    {\n        text: '8',\n        value: '8'\n    },\n    {\n        text: '9',\n        value: '9'\n    },\n    {\n        text: '10',\n        value: '10'\n    },\n    {\n        text: 'Все отделения',\n        value: ''\n    },\n\n];\n\n","const processRow = function (row: any) {\n    var finalVal = '';\n    for (var j = 0; j < row.length; j++) {\n        var innerValue = row[j] === null ? '' : row[j].toString();\n        if (row[j] instanceof Date) {\n            innerValue = row[j].toLocaleString();\n        }\n        var result = innerValue.replace(/\"/g, '\"\"');\n        if (result.search(/(\"|,|\\n)/g) >= 0)\n            result = '\"' + result + '\"';\n        if (j > 0)\n            finalVal += ',';\n        finalVal += result;\n    }\n    return finalVal + '\\n';\n};\n\nconst formatDataToCsvString = function (data: any[]): string {\n\n    let csvFile = '';\n    data.map((item) => Object.values(item)).forEach((item) => csvFile += processRow(item));\n    return csvFile;\n};\n\n\nexport const csvStringMaker = (data: any[], headers?: string[]) => {\n    if (data[0]) {\n        let blob = new Blob([processRow(headers || Object.keys(data[0])) + formatDataToCsvString(data)], {type: 'text/csv;charset=utf-8;'});\n        return URL.createObjectURL(blob);\n    }\n\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M473.843,204.112H373.625V50.018C373.625,22.505,351.121,0,323.608,0H189.576  c-27.512,0-50.017,22.505-50.017,50.018v154.095H38.155c-27.512,0-35.851,17.492-18.536,38.867l204.893,252.982  c17.317,21.384,45.647,21.384,62.962,0l204.907-252.982C509.696,221.604,501.355,204.112,473.843,204.112z\",\n  fill: \"#7F7F7F\"\n});\n\nvar SvgDownload = function SvgDownload(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    enableBackground: \"new 0 0 512 512\",\n    height: \"15px\",\n    id: \"Layer_1\",\n    viewBox: \"0 0 512 512\",\n    width: \"35px\",\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgDownload, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/download.f26833ef.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport './Diagramm.scss'\nimport { Bar, BarChart, CartesianGrid, Legend, Tooltip, XAxis, YAxis, } from 'recharts';\n\ntype TProps = {\n    data: any[],\n    dataKey: string\n\n}\n\nfunction getRandomColor(i: number) {\n    const colors = [\n        '#8884d8',\n        '#f40c0a',\n        '#81d88a',\n        '#443dd8',\n        '#3cd849',\n        '#d8c514',\n        '#af0596',\n        '#8884d8',\n        '#f45152',\n        '#81d88a',\n        '#443dd8',\n        '#8f3448',\n        '#d8c514',\n        '#af0596',\n        '#8884d8',\n        '#f45152',\n        '#81d88a',\n        '#443dd8',\n        '#8f3448',\n        '#d8c514',\n        '#af0596'\n\n    ];\n    return colors[i];\n}\n\n\nexport const Diagramm = (props: TProps) => {\n    const { data, dataKey } = props;\n    return (\n        <div className=\"Diagramm\">\n            <BarChart\n                width={1200}\n                height={500}\n                data={data}\n                margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey={dataKey}/>\n                <YAxis/>\n                <Tooltip/>\n                <Legend/>\n                {data[0] &&\n                // eslint-disable-next-line array-callback-return\n                Object.keys(data[0]).map((item, i) => {\n                    if (item !== dataKey) return <Bar dataKey={item} key={i} fill={getRandomColor(i)}/>;\n                })\n                }\n\n            </BarChart>\n        </div>\n    );\n};\n\n","import React, { Component } from 'react';\nimport './Select.scss'\n\n\ntype TItem = {\n    value:any,\n    text:string,\n};\n\ntype TProps = {\n    defaultString:string,\n    items:TItem[],\n    title:string,\n    onChange(e: any): any,\n};\n\nclass Select extends Component<TProps, {}> {\n\n\n    render() {\n        const { items, defaultString, title, onChange } = this.props;\n\n        return (\n            <div className='Select'>\n                <h2 className=\"Title\">{title}</h2>\n                <select defaultValue='255' onChange={onChange}>\n                    <option value='255' disabled>{defaultString}</option>\n                    {\n                        items.map((item,i) => {\n                            return(\n                                <option value={item.value} key={i}>{item.text}</option>\n                            );\n                        })\n                    }\n                </select>\n            </div>\n        );\n    }\n}\n\nexport default Select;","import React, { Component } from 'react';\nimport './InputM.scss'\nimport InputMask            from \"react-input-mask\";\n\ntype TProps = {\n    title: string,\n    onBlur(a: string): any,\n    checkDate: boolean,\n};\ntype TState = {\n    checked: boolean\n};\n\nclass InputM extends Component<TProps, TState> {\n\n    state = {\n        checked: true\n    };\n\n    checkValid = (str: string) => {\n        if (str.length === 10) {\n            const arr = str.split('-').map(i => Number.parseInt(i));\n            return arr[0] > 0 && arr[0] < 32\n                && arr[1] > 0 && arr[1] < 13\n                && arr[2] <= (new Date()).getFullYear()\n                && arr[2] > 1000\n        } else {\n            return false\n        }\n    };\n\n    setFlag = (str: string) => {\n        this.setState({\n            checked: this.checkValid(str)\n        })\n    };\n\n    handleBlur = (e: any) => {\n        const { onBlur } = this.props,\n            { checked } = this.state,\n            str = e.target.value;\n        if (str !== '') {\n            this.setFlag(str);\n            console.log(str + (new Date()).getFullYear());\n            if (checked) onBlur(str)\n        }\n    };\n\n    render() {\n        const { title, checkDate } = this.props,\n            { checked } = this.state;\n\n        return (\n            <div className='InputM'>\n                <h2 className=\"Title\">{title}</h2>\n                <InputMask className={checked ? 'normalInp' : 'errorInp'} mask=\"99-99-9999\" onBlur={this.handleBlur}/>\n                <p className={checked && checkDate ? 'NoMes' : 'Message'}> Неверно введена информация </p>\n            </div>\n        );\n    }\n}\n\nexport default InputM;","import React from 'react';\nimport './Menu.scss';\nimport Select from \"../../components/Select\";\nimport { departments } from \"../../utils\";\nimport InputM from \"../InputM\";\n\n\ntype TProps = {\n    dateStartChange(e: any): any,\n    dateEndChange(e: any): any,\n    depChange(e: any): any,\n    sendReq(): void,\n    checkDate: boolean\n}\n\n\nclass Menu extends React.Component<TProps, {}> {\n\n    f(e: any) {\n\n    }\n\n    render() {\n        const { dateStartChange, dateEndChange, sendReq, depChange, checkDate } = this.props;\n        return (\n            <div className=\"Menu\">\n                <div className=\"Wrapper\">\n                    <InputM title='Дата начала периода' onBlur={dateStartChange} checkDate={checkDate}/>\n                    <InputM title='Дата конца периода' onBlur={dateEndChange} checkDate={checkDate}/>\n                    <Select\n                        title='Отделение'\n                        items={departments}\n                        defaultString='Выберите отделение'\n                        onChange={depChange}\n                    />\n                    <Select\n                        title='Код диагноза'\n                        items={departments}\n                        defaultString='Выберите код диагноза'\n                        onChange={this.f}\n                    />\n                </div>\n                <button className=\"submit\" onClick={sendReq}>Запустить выборку</button>\n            </div>\n        );\n    }\n\n}\n\n\nexport default Menu;","import React                               from 'react';\nimport axios                               from 'axios'\nimport './styles.scss'\nimport { Table }                           from \"../../../components/Table\";\nimport { csvStringMaker, dateTransformer } from \"../../../utils\";\nimport { ReactComponent as Download }      from '../assets/download.svg'\nimport { Diagramm }                        from \"../../../components/Diagramm\";\nimport Menu                                from \"../../../components/Menu\";\n\nexport type TState = {\n    data: Column[],\n    dateStart: string,\n    dateEnd: string,\n    dep: string,\n}\n\ntype Column = {\n    department: string,\n    under18: string,\n    age19: string,\n    age22_24: string,\n    age25_29: string,\n    age30_34: string,\n    age35_39: string,\n    age40_44: string,\n    age45_49: string,\n    age50_54: string,\n    age55_59: string,\n    age60_64: string,\n    age75: string,\n}\n\nconst headers = [\n    'Департамент',\n    'до 18',\n    '18 - 19',\n    '20 - 24',\n    '25 - 29',\n    '30 - 34',\n    '35 - 39',\n    '40 - 44',\n    '45 - 49',\n    '50 - 54',\n    '55 - 59',\n    '60 +',\n    '70 +',\n];\n\nclass AgeStatistic extends React.Component<{}, TState> {\n    state: TState = {\n        data: [],\n        dateStart: '2014-01-01',\n        dateEnd: '2018-01-01',\n        dep: '',\n    };\n\n    componentDidMount(): void {\n        this.sendReq();\n    }\n\n    componentDidUpdate(): void {\n        csvStringMaker(this.state.data);\n    }\n\n    normalizeAgeData = (data: any[]): Column[] => {\n        return data.map((item: any) => {\n            return {\n                department: item['department'],\n                under18: item['under18'],\n                age19: item['19'],\n                age22_24: item['20-24'],\n                age25_29: item['25-29'],\n                age30_34: item['30-34'],\n                age35_39: item['35-39'],\n                age40_44: item['40-44'],\n                age45_49: item['45-49'],\n                age50_54: item['50-54'],\n                age55_59: item['55-59'],\n                age60_64: item['60+'],\n                age75: item['70+'],\n            }\n        });\n    };\n\n    sendReq = (): void => {\n        const { dateStart, dateEnd, dep } = this.state;\n        axios({\n            method: 'post',\n            url: 'http://localhost:3001/ageStatistic/',\n            data: {\n                dateStart: dateStart,\n                dateEnd: dateEnd,\n                dep: dep,\n            }\n        })\n            .then((response) => {\n                console.log(response.data);\n                this.setState({\n                    data: this.normalizeAgeData(response.data)\n                });\n                console.log(this.state.data)\n            })\n            .catch(function (error) {\n                alert(error);\n            });\n\n\n    };\n\n    dateStartChange = (date: string) => {\n        this.setState({\n            dateStart: date !== '' ? dateTransformer(date) : '2014-01-01'\n        });\n\n    };\n\n    dateEndChange = (date: string) => {\n        this.setState({\n            dateEnd: date !== '' ? dateTransformer(date) : '2040-01-01'\n        })\n    };\n\n    checkDate(start: string, end: string): boolean {\n        return Number.parseInt(start.split('-').join('')) <= Number.parseInt(end.split('-').join(''))\n    }\n\n    depChange = (e: any) => {\n        this.setState({\n            dep: e.target.value.toString()\n        })\n    };\n\n    render() {\n\n        const { data, dateEnd, dateStart } = this.state;\n        return (\n            <div className=\"AgeStatistic\">\n                <Menu dateStartChange={this.dateStartChange}\n                      dateEndChange={this.dateEndChange}\n                      sendReq={this.sendReq}\n                      depChange={this.depChange}\n                      checkDate={this.checkDate(dateStart, dateEnd)}\n                />\n                <div className=\"LabelContainer\">\n                    <div className=\"header\">\n                        <h2 className=\"Label\">Статистика по возрастам</h2>\n                    </div>\n                    <a className={'LinkCsv'} href={csvStringMaker(data)} download=\"export.csv\">Загрузить <Download/>\n                    </a>\n                </div>\n                <Table\n                    data={data}\n                    headers={headers}\n                />\n                <div className=\"header\">\n                    <h2 className=\"Label\">Статистическая гистограмма по возрастам</h2>\n                </div>\n                <Diagramm data={data} dataKey={'department'}/>\n            </div>\n        );\n    }\n\n}\n\nexport default AgeStatistic;\n\n","import React from 'react';\n\n\nclass DiagnoseStatistic extends React.Component<{}, {}> {\n    public state = {\n        now: \"\"\n    };\n\n    render(){\n\n        return(\n            <div>DiagnoseStatistic</div>\n        );\n    }\n}\n\nexport default DiagnoseStatistic;","import React from 'react';\n\n\nclass SexStatistic extends React.Component<{}, {}> {\n    public state = {\n        now: \"\"\n    };\n\n    render(){\n\n        return(\n            <div>SexStatistic</div>\n        );\n    }\n}\n\nexport default SexStatistic;","import React                          from 'react';\nimport axios                          from 'axios'\nimport './styles.scss'\nimport { Table }                      from \"../../../components/Table\";\nimport { csvStringMaker }             from \"../../../utils/csvMaker\";\nimport { ReactComponent as Download } from '../assets/download.svg'\nimport { Diagramm }                   from \"../../../components/Diagramm\";\nimport { dateTransformer }            from \"../../../utils\";\nimport Menu                           from \"../../../components/Menu\";\n\n\ntype TState = {\n    data: any[],\n    dateStart: string,\n    dateEnd: string,\n    dep: string,\n}\n\nconst headers = [\n    'Код региона',\n    'Количество пациентов',\n];\n\nclass RegionStatistic extends React.Component<{}, TState> {\n    public state: TState = {\n        data: [],\n        dateStart: '2014-01-01',\n        dateEnd: '2018-01-01',\n        dep: '',\n    };\n\n    sendReq = (): void => {\n        const { dateStart, dateEnd, dep } = this.state;\n        axios({\n            method: 'post',\n            url: 'http://localhost:3001/regionStatistic/',\n            data: {\n                dateStart: dateStart,\n                dateEnd: dateEnd,\n                dep: dep\n            }\n        })\n            .then((response) => {\n                console.log(response.data);\n                this.setState({\n                    data: response.data\n                });\n                console.log(this.state.data)\n            })\n            .catch(function (error) {\n                alert(error);\n            });\n\n\n    };\n\n    componentDidMount(): void {\n        this.sendReq();\n    }\n\n    dateStartChange = (date: string) => {\n        this.setState({\n            dateStart: dateTransformer(date)\n        });\n\n    };\n\n    dateEndChange = (date: string) => {\n        this.setState({\n            dateEnd: dateTransformer(date)\n        })\n    };\n\n    checkDate(start: string, end: string): boolean {\n        return Number.parseInt(start.split('-').join('')) <= Number.parseInt(end.split('-').join(''))\n    }\n\n    depChange = (e: any) => {\n        this.setState({\n            dep: e.target.value.toString()\n        })\n    };\n\n\n    render() {\n\n        const { data, dateStart, dateEnd } = this.state;\n        return (\n            <div className=\"RegStatistic\">\n                <Menu dateStartChange={this.dateStartChange}\n                      dateEndChange={this.dateEndChange}\n                      sendReq={this.sendReq}\n                      depChange={this.depChange}\n                      checkDate={this.checkDate(dateStart, dateEnd)}\n                />\n                <div className=\"LabelContainer\">\n                    <div className=\"header\">\n                        <h2 className=\"Label\">Статистика по регионам</h2>\n                    </div>\n                    <a className={'LinkCsv'} href={csvStringMaker(data)} download=\"export.csv\">Загрузить <Download/>\n                    </a>\n                </div>\n                <Table\n                    data={data}\n                    headers={headers}\n                />\n                <div className=\"header\">\n                    <h2 className=\"Label\">Статистическая диаграмма по регионам</h2>\n                </div>\n                <Diagramm data={data} dataKey={'region_code'}/>\n            </div>\n        );\n    }\n\n}\n\nexport default RegionStatistic;\n\n","import React from 'react';\nimport './PageHolder.scss';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { AgeStatistic, DiagnoseStatistic, RegionStatistic, SexStatistic } from \"./pages\";\n\ntype TProps = {\n    currentPage: number,\n}\n\n\nclass PageHolder extends React.Component< TProps,{}> {\n\n    static defaultProps={\n        currentPage: 0,\n    };\n\n    public state = {};\n\n    getPages = () => {\n        return[\n            {\n                component: <AgeStatistic/>\n            },\n            {\n                component:<DiagnoseStatistic/>\n            },\n            {\n                component:<RegionStatistic/>\n            },\n            {\n                component:<SexStatistic/>\n            },\n        ]\n    };\n\n    renderPage = (currentPageNumber:number) => {\n        const pages = this.getPages();\n        return pages[currentPageNumber].component\n    };\n\n    setData = (dateStart: string, dateEnd: string, dep: string) => {\n        this.setState({\n            data: {\n                dateS: dateStart,\n                dateE: dateEnd,\n                dep: dep\n            }\n        })\n    };\n\n    render(){\n        const {currentPage} = this.props;\n        return(\n\n            <div className=\"PageHolder\">\n               { this.renderPage(currentPage) }\n            </div>\n        );\n    }\n\n}\n\n\nexport default PageHolder;","import React from 'react';\nimport TopMenu from \"./TopMenu\";\nimport PageHolder from \"./PageHolder\";\nimport './Home.scss'\n\nclass Home extends React.Component<{}, {}> {\n    public state = {\n        currentPage: 0,\n\n    };\n\n\n    setCurrentPage = (num:number) => {\n        this.setState({\n            currentPage:num,\n        })\n    };\n\n\n    render(){\n        const {currentPage} = this.state;\n        return(\n            <div className=\"Home\">\n                <TopMenu setCurrentPage={this.setCurrentPage}/>\n                <div className=\"content\">\n\n                    <PageHolder currentPage={currentPage}/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Home;\n","import React from 'react';\nimport Home from './Home';\n\nclass Main extends React.Component<{}, {}> {\n\n    render(){\n        return(\n            <Home/>\n        );\n    }\n\n}\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\nimport Home from './AppMain';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}